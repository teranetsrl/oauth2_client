// Mocks generated by Mockito 5.3.2 from annotations
// in oauth2_client/test/oauth2_helper_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i8;
import 'dart:convert' as _i9;
import 'dart:typed_data' as _i10;

import 'package:http/http.dart' as _i6;
import 'package:mockito/mockito.dart' as _i1;
import 'package:oauth2_client/access_token_response.dart' as _i3;
import 'package:oauth2_client/oauth2_client.dart' as _i4;
import 'package:oauth2_client/oauth2_response.dart' as _i5;
import 'package:oauth2_client/src/base_storage.dart' as _i7;
import 'package:oauth2_client/src/base_web_auth.dart' as _i2;
import 'package:oauth2_client/src/token_storage.dart' as _i11;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeBaseWebAuth_0 extends _i1.SmartFake implements _i2.BaseWebAuth {
  _FakeBaseWebAuth_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeAccessTokenResponse_1 extends _i1.SmartFake
    implements _i3.AccessTokenResponse {
  _FakeAccessTokenResponse_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeAuthorizationWrapper_2 extends _i1.SmartFake
    implements _i4.AuthorizationWrapper {
  _FakeAuthorizationWrapper_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeOAuth2Response_3 extends _i1.SmartFake
    implements _i5.OAuth2Response {
  _FakeOAuth2Response_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeResponse_4 extends _i1.SmartFake implements _i6.Response {
  _FakeResponse_4(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeStreamedResponse_5 extends _i1.SmartFake
    implements _i6.StreamedResponse {
  _FakeStreamedResponse_5(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeBaseStorage_6 extends _i1.SmartFake implements _i7.BaseStorage {
  _FakeBaseStorage_6(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [OAuth2Client].
///
/// See the documentation for Mockito's code generation for more information.
class MockOAuth2Client extends _i1.Mock implements _i4.OAuth2Client {
  MockOAuth2Client() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String get redirectUri => (super.noSuchMethod(
        Invocation.getter(#redirectUri),
        returnValue: '',
      ) as String);
  @override
  set redirectUri(String? _redirectUri) => super.noSuchMethod(
        Invocation.setter(
          #redirectUri,
          _redirectUri,
        ),
        returnValueForMissingStub: null,
      );
  @override
  String get customUriScheme => (super.noSuchMethod(
        Invocation.getter(#customUriScheme),
        returnValue: '',
      ) as String);
  @override
  set customUriScheme(String? _customUriScheme) => super.noSuchMethod(
        Invocation.setter(
          #customUriScheme,
          _customUriScheme,
        ),
        returnValueForMissingStub: null,
      );
  @override
  String get tokenUrl => (super.noSuchMethod(
        Invocation.getter(#tokenUrl),
        returnValue: '',
      ) as String);
  @override
  set tokenUrl(String? _tokenUrl) => super.noSuchMethod(
        Invocation.setter(
          #tokenUrl,
          _tokenUrl,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set refreshUrl(String? _refreshUrl) => super.noSuchMethod(
        Invocation.setter(
          #refreshUrl,
          _refreshUrl,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set revokeUrl(String? _revokeUrl) => super.noSuchMethod(
        Invocation.setter(
          #revokeUrl,
          _revokeUrl,
        ),
        returnValueForMissingStub: null,
      );
  @override
  String get authorizeUrl => (super.noSuchMethod(
        Invocation.getter(#authorizeUrl),
        returnValue: '',
      ) as String);
  @override
  set authorizeUrl(String? _authorizeUrl) => super.noSuchMethod(
        Invocation.setter(
          #authorizeUrl,
          _authorizeUrl,
        ),
        returnValueForMissingStub: null,
      );
  @override
  String get scopeSeparator => (super.noSuchMethod(
        Invocation.getter(#scopeSeparator),
        returnValue: '',
      ) as String);
  @override
  set scopeSeparator(String? _scopeSeparator) => super.noSuchMethod(
        Invocation.setter(
          #scopeSeparator,
          _scopeSeparator,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i2.BaseWebAuth get webAuthClient => (super.noSuchMethod(
        Invocation.getter(#webAuthClient),
        returnValue: _FakeBaseWebAuth_0(
          this,
          Invocation.getter(#webAuthClient),
        ),
      ) as _i2.BaseWebAuth);
  @override
  set webAuthClient(_i2.BaseWebAuth? _webAuthClient) => super.noSuchMethod(
        Invocation.setter(
          #webAuthClient,
          _webAuthClient,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i4.CredentialsLocation get credentialsLocation => (super.noSuchMethod(
        Invocation.getter(#credentialsLocation),
        returnValue: _i4.CredentialsLocation.header,
      ) as _i4.CredentialsLocation);
  @override
  set credentialsLocation(_i4.CredentialsLocation? _credentialsLocation) =>
      super.noSuchMethod(
        Invocation.setter(
          #credentialsLocation,
          _credentialsLocation,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i8.Future<_i3.AccessTokenResponse> getTokenWithImplicitGrantFlow({
    required String? clientId,
    List<String>? scopes,
    bool? enableState = true,
    String? state,
    dynamic httpClient,
    _i2.BaseWebAuth? webAuthClient,
    Map<String, dynamic>? webAuthOpts,
    Map<String, dynamic>? customParams,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getTokenWithImplicitGrantFlow,
          [],
          {
            #clientId: clientId,
            #scopes: scopes,
            #enableState: enableState,
            #state: state,
            #httpClient: httpClient,
            #webAuthClient: webAuthClient,
            #webAuthOpts: webAuthOpts,
            #customParams: customParams,
          },
        ),
        returnValue: _i8.Future<_i3.AccessTokenResponse>.value(
            _FakeAccessTokenResponse_1(
          this,
          Invocation.method(
            #getTokenWithImplicitGrantFlow,
            [],
            {
              #clientId: clientId,
              #scopes: scopes,
              #enableState: enableState,
              #state: state,
              #httpClient: httpClient,
              #webAuthClient: webAuthClient,
              #webAuthOpts: webAuthOpts,
              #customParams: customParams,
            },
          ),
        )),
      ) as _i8.Future<_i3.AccessTokenResponse>);
  @override
  _i8.Future<_i3.AccessTokenResponse> getTokenWithAuthCodeFlow({
    required String? clientId,
    List<String>? scopes,
    String? clientSecret,
    bool? enablePKCE = true,
    bool? enableState = true,
    String? state,
    String? codeVerifier,
    Function? afterAuthorizationCodeCb,
    Map<String, dynamic>? authCodeParams,
    Map<String, dynamic>? accessTokenParams,
    Map<String, String>? accessTokenHeaders,
    dynamic httpClient,
    _i2.BaseWebAuth? webAuthClient,
    Map<String, dynamic>? webAuthOpts,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getTokenWithAuthCodeFlow,
          [],
          {
            #clientId: clientId,
            #scopes: scopes,
            #clientSecret: clientSecret,
            #enablePKCE: enablePKCE,
            #enableState: enableState,
            #state: state,
            #codeVerifier: codeVerifier,
            #afterAuthorizationCodeCb: afterAuthorizationCodeCb,
            #authCodeParams: authCodeParams,
            #accessTokenParams: accessTokenParams,
            #accessTokenHeaders: accessTokenHeaders,
            #httpClient: httpClient,
            #webAuthClient: webAuthClient,
            #webAuthOpts: webAuthOpts,
          },
        ),
        returnValue: _i8.Future<_i3.AccessTokenResponse>.value(
            _FakeAccessTokenResponse_1(
          this,
          Invocation.method(
            #getTokenWithAuthCodeFlow,
            [],
            {
              #clientId: clientId,
              #scopes: scopes,
              #clientSecret: clientSecret,
              #enablePKCE: enablePKCE,
              #enableState: enableState,
              #state: state,
              #codeVerifier: codeVerifier,
              #afterAuthorizationCodeCb: afterAuthorizationCodeCb,
              #authCodeParams: authCodeParams,
              #accessTokenParams: accessTokenParams,
              #accessTokenHeaders: accessTokenHeaders,
              #httpClient: httpClient,
              #webAuthClient: webAuthClient,
              #webAuthOpts: webAuthOpts,
            },
          ),
        )),
      ) as _i8.Future<_i3.AccessTokenResponse>);
  @override
  _i8.Future<_i3.AccessTokenResponse> getTokenWithClientCredentialsFlow({
    required String? clientId,
    required String? clientSecret,
    List<String>? scopes,
    Map<String, String>? customHeaders,
    dynamic httpClient,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getTokenWithClientCredentialsFlow,
          [],
          {
            #clientId: clientId,
            #clientSecret: clientSecret,
            #scopes: scopes,
            #customHeaders: customHeaders,
            #httpClient: httpClient,
          },
        ),
        returnValue: _i8.Future<_i3.AccessTokenResponse>.value(
            _FakeAccessTokenResponse_1(
          this,
          Invocation.method(
            #getTokenWithClientCredentialsFlow,
            [],
            {
              #clientId: clientId,
              #clientSecret: clientSecret,
              #scopes: scopes,
              #customHeaders: customHeaders,
              #httpClient: httpClient,
            },
          ),
        )),
      ) as _i8.Future<_i3.AccessTokenResponse>);
  @override
  _i8.Future<_i4.AuthorizationWrapper> requestAuthorization({
    required String? clientId,
    List<String>? scopes,
    String? codeChallenge,
    bool? enableState = true,
    String? state,
    Map<String, dynamic>? customParams,
    _i2.BaseWebAuth? webAuthClient,
    Map<String, dynamic>? webAuthOpts,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #requestAuthorization,
          [],
          {
            #clientId: clientId,
            #scopes: scopes,
            #codeChallenge: codeChallenge,
            #enableState: enableState,
            #state: state,
            #customParams: customParams,
            #webAuthClient: webAuthClient,
            #webAuthOpts: webAuthOpts,
          },
        ),
        returnValue: _i8.Future<_i4.AuthorizationWrapper>.value(
            _FakeAuthorizationWrapper_2(
          this,
          Invocation.method(
            #requestAuthorization,
            [],
            {
              #clientId: clientId,
              #scopes: scopes,
              #codeChallenge: codeChallenge,
              #enableState: enableState,
              #state: state,
              #customParams: customParams,
              #webAuthClient: webAuthClient,
              #webAuthOpts: webAuthOpts,
            },
          ),
        )),
      ) as _i8.Future<_i4.AuthorizationWrapper>);
  @override
  _i8.Future<_i3.AccessTokenResponse> requestAccessToken({
    required String? code,
    required String? clientId,
    String? clientSecret,
    String? codeVerifier,
    List<String>? scopes,
    Map<String, dynamic>? customParams,
    Map<String, String>? customHeaders,
    dynamic httpClient,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #requestAccessToken,
          [],
          {
            #code: code,
            #clientId: clientId,
            #clientSecret: clientSecret,
            #codeVerifier: codeVerifier,
            #scopes: scopes,
            #customParams: customParams,
            #customHeaders: customHeaders,
            #httpClient: httpClient,
          },
        ),
        returnValue: _i8.Future<_i3.AccessTokenResponse>.value(
            _FakeAccessTokenResponse_1(
          this,
          Invocation.method(
            #requestAccessToken,
            [],
            {
              #code: code,
              #clientId: clientId,
              #clientSecret: clientSecret,
              #codeVerifier: codeVerifier,
              #scopes: scopes,
              #customParams: customParams,
              #customHeaders: customHeaders,
              #httpClient: httpClient,
            },
          ),
        )),
      ) as _i8.Future<_i3.AccessTokenResponse>);
  @override
  _i8.Future<_i3.AccessTokenResponse> refreshToken(
    String? refreshToken, {
    dynamic httpClient,
    required String? clientId,
    String? clientSecret,
    List<String>? scopes,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #refreshToken,
          [refreshToken],
          {
            #httpClient: httpClient,
            #clientId: clientId,
            #clientSecret: clientSecret,
            #scopes: scopes,
          },
        ),
        returnValue: _i8.Future<_i3.AccessTokenResponse>.value(
            _FakeAccessTokenResponse_1(
          this,
          Invocation.method(
            #refreshToken,
            [refreshToken],
            {
              #httpClient: httpClient,
              #clientId: clientId,
              #clientSecret: clientSecret,
              #scopes: scopes,
            },
          ),
        )),
      ) as _i8.Future<_i3.AccessTokenResponse>);
  @override
  _i8.Future<_i5.OAuth2Response> revokeToken(
    _i3.AccessTokenResponse? tknResp, {
    String? clientId,
    String? clientSecret,
    dynamic httpClient,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #revokeToken,
          [tknResp],
          {
            #clientId: clientId,
            #clientSecret: clientSecret,
            #httpClient: httpClient,
          },
        ),
        returnValue: _i8.Future<_i5.OAuth2Response>.value(_FakeOAuth2Response_3(
          this,
          Invocation.method(
            #revokeToken,
            [tknResp],
            {
              #clientId: clientId,
              #clientSecret: clientSecret,
              #httpClient: httpClient,
            },
          ),
        )),
      ) as _i8.Future<_i5.OAuth2Response>);
  @override
  _i8.Future<_i5.OAuth2Response> revokeAccessToken(
    _i3.AccessTokenResponse? tknResp, {
    String? clientId,
    String? clientSecret,
    dynamic httpClient,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #revokeAccessToken,
          [tknResp],
          {
            #clientId: clientId,
            #clientSecret: clientSecret,
            #httpClient: httpClient,
          },
        ),
        returnValue: _i8.Future<_i5.OAuth2Response>.value(_FakeOAuth2Response_3(
          this,
          Invocation.method(
            #revokeAccessToken,
            [tknResp],
            {
              #clientId: clientId,
              #clientSecret: clientSecret,
              #httpClient: httpClient,
            },
          ),
        )),
      ) as _i8.Future<_i5.OAuth2Response>);
  @override
  _i8.Future<_i5.OAuth2Response> revokeRefreshToken(
    _i3.AccessTokenResponse? tknResp, {
    String? clientId,
    String? clientSecret,
    dynamic httpClient,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #revokeRefreshToken,
          [tknResp],
          {
            #clientId: clientId,
            #clientSecret: clientSecret,
            #httpClient: httpClient,
          },
        ),
        returnValue: _i8.Future<_i5.OAuth2Response>.value(_FakeOAuth2Response_3(
          this,
          Invocation.method(
            #revokeRefreshToken,
            [tknResp],
            {
              #clientId: clientId,
              #clientSecret: clientSecret,
              #httpClient: httpClient,
            },
          ),
        )),
      ) as _i8.Future<_i5.OAuth2Response>);
  @override
  String getAuthorizeUrl({
    required String? clientId,
    String? responseType = r'code',
    String? redirectUri,
    List<String>? scopes,
    bool? enableState = true,
    String? state,
    String? codeChallenge,
    Map<String, dynamic>? customParams,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getAuthorizeUrl,
          [],
          {
            #clientId: clientId,
            #responseType: responseType,
            #redirectUri: redirectUri,
            #scopes: scopes,
            #enableState: enableState,
            #state: state,
            #codeChallenge: codeChallenge,
            #customParams: customParams,
          },
        ),
        returnValue: '',
      ) as String);
  @override
  Map<String, dynamic> getTokenUrlParams({
    required String? code,
    String? redirectUri,
    String? codeVerifier,
    Map<String, dynamic>? customParams,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getTokenUrlParams,
          [],
          {
            #code: code,
            #redirectUri: redirectUri,
            #codeVerifier: codeVerifier,
            #customParams: customParams,
          },
        ),
        returnValue: <String, dynamic>{},
      ) as Map<String, dynamic>);
  @override
  Map<String, String> getAuthorizationHeader({
    required String? clientId,
    String? clientSecret,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getAuthorizationHeader,
          [],
          {
            #clientId: clientId,
            #clientSecret: clientSecret,
          },
        ),
        returnValue: <String, String>{},
      ) as Map<String, String>);
  @override
  Map<String, String> getRefreshUrlParams({required String? refreshToken}) =>
      (super.noSuchMethod(
        Invocation.method(
          #getRefreshUrlParams,
          [],
          {#refreshToken: refreshToken},
        ),
        returnValue: <String, String>{},
      ) as Map<String, String>);
  @override
  _i3.AccessTokenResponse http2TokenResponse(
    _i6.Response? response, {
    List<String>? requestedScopes,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #http2TokenResponse,
          [response],
          {#requestedScopes: requestedScopes},
        ),
        returnValue: _FakeAccessTokenResponse_1(
          this,
          Invocation.method(
            #http2TokenResponse,
            [response],
            {#requestedScopes: requestedScopes},
          ),
        ),
      ) as _i3.AccessTokenResponse);
  @override
  String serializeScopes(List<String>? scopes) => (super.noSuchMethod(
        Invocation.method(
          #serializeScopes,
          [scopes],
        ),
        returnValue: '',
      ) as String);
}

/// A class which mocks [Client].
///
/// See the documentation for Mockito's code generation for more information.
class MockClient extends _i1.Mock implements _i6.Client {
  MockClient() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i8.Future<_i6.Response> head(
    Uri? url, {
    Map<String, String>? headers,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #head,
          [url],
          {#headers: headers},
        ),
        returnValue: _i8.Future<_i6.Response>.value(_FakeResponse_4(
          this,
          Invocation.method(
            #head,
            [url],
            {#headers: headers},
          ),
        )),
      ) as _i8.Future<_i6.Response>);
  @override
  _i8.Future<_i6.Response> get(
    Uri? url, {
    Map<String, String>? headers,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #get,
          [url],
          {#headers: headers},
        ),
        returnValue: _i8.Future<_i6.Response>.value(_FakeResponse_4(
          this,
          Invocation.method(
            #get,
            [url],
            {#headers: headers},
          ),
        )),
      ) as _i8.Future<_i6.Response>);
  @override
  _i8.Future<_i6.Response> post(
    Uri? url, {
    Map<String, String>? headers,
    Object? body,
    _i9.Encoding? encoding,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #post,
          [url],
          {
            #headers: headers,
            #body: body,
            #encoding: encoding,
          },
        ),
        returnValue: _i8.Future<_i6.Response>.value(_FakeResponse_4(
          this,
          Invocation.method(
            #post,
            [url],
            {
              #headers: headers,
              #body: body,
              #encoding: encoding,
            },
          ),
        )),
      ) as _i8.Future<_i6.Response>);
  @override
  _i8.Future<_i6.Response> put(
    Uri? url, {
    Map<String, String>? headers,
    Object? body,
    _i9.Encoding? encoding,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #put,
          [url],
          {
            #headers: headers,
            #body: body,
            #encoding: encoding,
          },
        ),
        returnValue: _i8.Future<_i6.Response>.value(_FakeResponse_4(
          this,
          Invocation.method(
            #put,
            [url],
            {
              #headers: headers,
              #body: body,
              #encoding: encoding,
            },
          ),
        )),
      ) as _i8.Future<_i6.Response>);
  @override
  _i8.Future<_i6.Response> patch(
    Uri? url, {
    Map<String, String>? headers,
    Object? body,
    _i9.Encoding? encoding,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #patch,
          [url],
          {
            #headers: headers,
            #body: body,
            #encoding: encoding,
          },
        ),
        returnValue: _i8.Future<_i6.Response>.value(_FakeResponse_4(
          this,
          Invocation.method(
            #patch,
            [url],
            {
              #headers: headers,
              #body: body,
              #encoding: encoding,
            },
          ),
        )),
      ) as _i8.Future<_i6.Response>);
  @override
  _i8.Future<_i6.Response> delete(
    Uri? url, {
    Map<String, String>? headers,
    Object? body,
    _i9.Encoding? encoding,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #delete,
          [url],
          {
            #headers: headers,
            #body: body,
            #encoding: encoding,
          },
        ),
        returnValue: _i8.Future<_i6.Response>.value(_FakeResponse_4(
          this,
          Invocation.method(
            #delete,
            [url],
            {
              #headers: headers,
              #body: body,
              #encoding: encoding,
            },
          ),
        )),
      ) as _i8.Future<_i6.Response>);
  @override
  _i8.Future<String> read(
    Uri? url, {
    Map<String, String>? headers,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #read,
          [url],
          {#headers: headers},
        ),
        returnValue: _i8.Future<String>.value(''),
      ) as _i8.Future<String>);
  @override
  _i8.Future<_i10.Uint8List> readBytes(
    Uri? url, {
    Map<String, String>? headers,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #readBytes,
          [url],
          {#headers: headers},
        ),
        returnValue: _i8.Future<_i10.Uint8List>.value(_i10.Uint8List(0)),
      ) as _i8.Future<_i10.Uint8List>);
  @override
  _i8.Future<_i6.StreamedResponse> send(_i6.BaseRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #send,
          [request],
        ),
        returnValue:
            _i8.Future<_i6.StreamedResponse>.value(_FakeStreamedResponse_5(
          this,
          Invocation.method(
            #send,
            [request],
          ),
        )),
      ) as _i8.Future<_i6.StreamedResponse>);
  @override
  void close() => super.noSuchMethod(
        Invocation.method(
          #close,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [TokenStorage].
///
/// See the documentation for Mockito's code generation for more information.
class MockTokenStorage extends _i1.Mock implements _i11.TokenStorage {
  MockTokenStorage() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String get key => (super.noSuchMethod(
        Invocation.getter(#key),
        returnValue: '',
      ) as String);
  @override
  set key(String? _key) => super.noSuchMethod(
        Invocation.setter(
          #key,
          _key,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i7.BaseStorage get storage => (super.noSuchMethod(
        Invocation.getter(#storage),
        returnValue: _FakeBaseStorage_6(
          this,
          Invocation.getter(#storage),
        ),
      ) as _i7.BaseStorage);
  @override
  set storage(_i7.BaseStorage? _storage) => super.noSuchMethod(
        Invocation.setter(
          #storage,
          _storage,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i8.Future<_i3.AccessTokenResponse?> getToken(List<String>? scopes) =>
      (super.noSuchMethod(
        Invocation.method(
          #getToken,
          [scopes],
        ),
        returnValue: _i8.Future<_i3.AccessTokenResponse?>.value(),
      ) as _i8.Future<_i3.AccessTokenResponse?>);
  @override
  _i8.Future<void> addToken(_i3.AccessTokenResponse? tknResp) =>
      (super.noSuchMethod(
        Invocation.method(
          #addToken,
          [tknResp],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);
  @override
  _i8.Future<Map<String, Map<dynamic, dynamic>>> insertToken(
          _i3.AccessTokenResponse? tknResp) =>
      (super.noSuchMethod(
        Invocation.method(
          #insertToken,
          [tknResp],
        ),
        returnValue: _i8.Future<Map<String, Map<dynamic, dynamic>>>.value(
            <String, Map<dynamic, dynamic>>{}),
      ) as _i8.Future<Map<String, Map<dynamic, dynamic>>>);
  @override
  _i8.Future<bool> deleteToken(List<String>? scopes) => (super.noSuchMethod(
        Invocation.method(
          #deleteToken,
          [scopes],
        ),
        returnValue: _i8.Future<bool>.value(false),
      ) as _i8.Future<bool>);
  @override
  _i8.Future<bool> deleteAllTokens() => (super.noSuchMethod(
        Invocation.method(
          #deleteAllTokens,
          [],
        ),
        returnValue: _i8.Future<bool>.value(false),
      ) as _i8.Future<bool>);
  @override
  List<String> clearScopes(List<String>? scopes) => (super.noSuchMethod(
        Invocation.method(
          #clearScopes,
          [scopes],
        ),
        returnValue: <String>[],
      ) as List<String>);
  @override
  List<dynamic> getSortedScopes(List<String>? scopes) => (super.noSuchMethod(
        Invocation.method(
          #getSortedScopes,
          [scopes],
        ),
        returnValue: <dynamic>[],
      ) as List<dynamic>);
  @override
  String getScopeKey(List<String>? scope) => (super.noSuchMethod(
        Invocation.method(
          #getScopeKey,
          [scope],
        ),
        returnValue: '',
      ) as String);
}

/// A class which mocks [BaseStorage].
///
/// See the documentation for Mockito's code generation for more information.
class MockBaseStorage extends _i1.Mock implements _i7.BaseStorage {
  MockBaseStorage() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i8.Future<String?> read(String? key) => (super.noSuchMethod(
        Invocation.method(
          #read,
          [key],
        ),
        returnValue: _i8.Future<String?>.value(),
      ) as _i8.Future<String?>);
  @override
  _i8.Future<void> write(
    String? key,
    String? value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #write,
          [
            key,
            value,
          ],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);
}
